---

# Copyright Â© 2025 kogeler
# SPDX-License-Identifier: Apache-2.0

name: Build and Push Docker Images

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Get directories with Dockerfile
        id: get_dirs
        run: |
          # Find all top-level directories containing Dockerfile
          DIRS=$(find . -mindepth 1 -maxdepth 1 -type d ! -path . | sed 's|^\./||' | grep -v '^\.' | while read d; do
            if [ -f "$d/Dockerfile" ]; then
              echo "$d"
            fi
          done)

          # Convert output into JSON array
          JSON=$(echo "$DIRS" | jq -R -s -c 'split("\n")[:-1]')
          echo "dirs=$JSON" >> $GITHUB_OUTPUT

      - name: Debug directories JSON
        run: echo "DIRS_OUTPUT = ${{ steps.get_dirs.outputs.dirs }}"

      - name: Set matrix
        id: set_matrix
        run: |
          # Wrap it into {"folders": [...]} format
          MATRIX_JSON=$(jq -c -n --argjson arr '${{ steps.get_dirs.outputs.dirs }}' '{folders: $arr}')
          echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT

      - name: Debug matrix
        run: echo "MATRIX_OUTPUT = ${{ steps.set_matrix.outputs.matrix }}"

  build_and_push:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: ${{ fromJson(needs.prepare.outputs.matrix).folders }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Read version
        id: read_version
        run: |
          # Read the first non-empty line from .version, remove leading/trailing whitespace
          VERSION=$(sed '/^[[:space:]]*$/d' "${{ matrix.folder }}/.version" | head -n 1 | sed 's/^[[:space:]]*//; s/[[:space:]]*$//')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.folder }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.folder }}
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          # We tag the image with 'latest' and the content from .version
          tags: |
            ghcr.io/${{ github.repository }}/${{ matrix.folder }}:latest
            ghcr.io/${{ github.repository }}/${{ matrix.folder }}:${{ steps.read_version.outputs.version }}
